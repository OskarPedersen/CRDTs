import all

class __SET__Worker
  def start(set : __SET__, operations : int) : void {
    --repeat i <- operations {
    --  set.add(i)
    --}
    __BODY__
  }

  def wait() : void ()


class Main
  def main() : void {
    let runs = __RUNS__;
    let operations = __OPERATIONS__;
    let workers = __WORKERS__;
    let time = 0;
    let times = new [int](runs);
    repeat i <- runs {
      let set = new __SET__();
      let setWorkers = new [__SET__Worker](workers);
      tic();
      repeat i <- |setWorkers| {
        setWorkers[i] = new __SET__Worker()
      };
      repeat i <- |setWorkers| {
        (setWorkers[i]).start(set, operations)
      };
      repeat i <- |setWorkers| {
        get (setWorkers[i]).wait()
      };
      __WAIT_GET__ set.wait();
      --print("__SET__: {} ms\n", toc());
      time = time + toc();
    };
    let mean = time / runs;
    let stdDeviation = 0;
    repeat i <- |times| {
      let diff = mean - times[i];
      stdDeviation = stdDeviation + (diff * diff);
    };
    --print("stdDev: {} ", stdDeviation); -- TODO how to print this for the report
    print("{}", mean);
  }
