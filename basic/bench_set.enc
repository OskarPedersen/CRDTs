import all


class ActiveHashSetWorker
  def init(hashSet : ActiveHashSet_int, adds : int) : void {
    repeat i <- adds {
      hashSet.add(i);
    }
  }

  def wait() : void ()

class DivTimeSetWorker
  def init(divTimeSet : DivTimeSet, adds : int) : void {
    repeat i <- adds {
      divTimeSet.add(i)
    }
  }

  def wait() : void ()

class OpOrSetWorker
  def init(set : OpOrSet, adds : int) : void {
    repeat i <- adds {
      set.add(i)
    }
  }

  def wait() : void ()

class SubSetWorker
    def init(set : SubSet, adds : int) : void {
      repeat i <- adds {
        set.add(i)
      }
    }

    def wait() : void ()

class Main
  def main() : void {
    let runs = 1;
    let adds = 100000;
    let workers = 4;

    repeat i <- runs {
      let subSet = new SubSet();
      let subSetWorkers = new [SubSetWorker](workers);
      tic();
      repeat i <- |subSetWorkers| {
        subSetWorkers[i] = new SubSetWorker(subSet, adds);
      };
      repeat i <- |subSetWorkers| {
        get (subSetWorkers[i]).wait()
      };
      subSet.wait();
      print("SubSet: {} ms\n", toc());



      let hashSet = new ActiveHashSet_int();
      let hashSetWorkers = new [ActiveHashSetWorker](workers);
      tic();
      repeat i <- |hashSetWorkers| {
        hashSetWorkers[i] = new ActiveHashSetWorker(hashSet, adds);
      };
      repeat i <- |hashSetWorkers| {
        get (hashSetWorkers[i]).wait()
      };
      get hashSet.wait();
      print("HashSet: {} ms\n", toc());


      let divTimeSet = new DivTimeSet();
      let divTimeSetWorkers = new [DivTimeSetWorker](workers);
      tic();
      repeat i <- |divTimeSetWorkers| {
        divTimeSetWorkers[i] = new DivTimeSetWorker(divTimeSet, adds)
      };
      repeat i <- |divTimeSetWorkers | {
        get (divTimeSetWorkers[i]).wait()
      };
      divTimeSet.wait();
      print("DivTimeSet: {} ms\n", toc());


      let opOrSet = new OpOrSet();
      let opOrSetWorkers = new [OpOrSetWorker](workers);
      tic();
      repeat i <- |opOrSetWorkers| {
        opOrSetWorkers[i] = new OpOrSetWorker(opOrSet, adds);
      };
      repeat i <- |opOrSetWorkers| {
        get (opOrSetWorkers[i]).wait();
      };
      opOrSet.wait();
      print("OpOrSet: {} ms\n", toc());
    }
  }
